(define-key global-map "\C-ca" 'org-agenda)
(define-key global-map "\C-cl" 'org-store-link)
(define-key global-map "\M-`" 'other-frame )
(define-key global-map (kbd "M-]") (lambda () (interactive (other-window +1 nil))))
(define-key global-map (kbd "M-[") (lambda () (interactive (other-window -1 nil))))
(define-key global-map (kbd "A-]") (lambda () (interactive (other-window +1 nil))))
(define-key global-map (kbd "A-[") (lambda () (interactive (other-window -1 nil))))
(define-key python-mode-map (kbd "C-x a") 'nose2-all)
(define-key python-mode-map (kbd "C-x m") 'nose2-module)
(global-set-key (kbd "C-x r v") 'list-register)
(global-set-key (kbd "C-`") 'next-error)
;; (global-set-key (kbd "C-x C-b") 'ibuffer)
;;(define-key twittering-mode-map (kbd "C-c o") 'osx-browse-url)
;;(define-key twittering-mode-map (kbd "C-c e") 'browse-url-text-emacs)
(require 'key-chord)
(key-chord-mode 1)
(key-chord-define-global "11" "!")
(key-chord-define-global "''" "\"")
(key-chord-define-global ",," "<")
(key-chord-define-global ".." ">")
(key-chord-define-global "99" "(")
(key-chord-define-global "00" ")")


(require 'unbound)
